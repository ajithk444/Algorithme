// LongestCommonSequence
LCS Problem Statement: Given two sequences, find the length of longest subsequence present in both of them. 
A subsequence is a sequence that appears in the same relative order, but not necessarily contiguous. 
For example, “abc”, “abg”, “bdf”, “aeg”, ‘”acefg”, .. etc are subsequences of “abcdefg”. 
So a string of length n has 2^n different possible subsequences.

Examples:
LCS for input Sequences “ABCDGH” and “AEDFHR” is “ADH” of length 3.
LCS for input Sequences “AGGTAB” and “GXTXAYB” is “GTAB” of length 4.

//Longest Repeated sequence
Given a string, print the longest repeating subseequence such that the two subsequence don’t have same string 
character at same position, i.e., any i’th character in the two subsequences shouldn’t have the same index 
in the original string.

//Longest Subsequence
Find the longest substring of a given string
